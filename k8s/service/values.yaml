replicaCount: 1

image:
  repository: chelyshkin/jb-service
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

probes:
  liveness:
    path: "/api/v1/liveness"
    port: http
  readness:
    path: "/api/v1/readness"
    port: http

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "jb-service"

podAnnotations: {
  prometheus.io/scrape: "true",
  prometheus.io/port: "9100",
  prometheus.io/path: "/metrics"
}

podLabels: {
  app: jb-service
}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {
  runAsUser: 1000
}

service:
  serviceAccountName: fluent-bit
  type: ClusterIP
  port: 8080

ingress:
  enabled: true
  className: ""
  annotations: {
    nginx.ingress.kubernetes.io/rewrite-target: "/",
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
  }
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: jb-service
              port:
                number: 8080
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
   limits:
     cpu: "2"
     memory: 256Mi
   requests:
     cpu: "100m"
     memory: 128Mi

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 95
  targetMemoryUtilizationPercentage: 95
  targetRequestsCount: 4

nodeSelector: {}
tolerations: []
affinity: {}
